
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASSIGN COMMA DIV DT_FLOAT DT_INT FLOAT ID INTEGER LPAREN MUL READ RPAREN SEMICOLON SUB WRITEprogram : stmt_list SEMICOLONstmt_list : stmt_list SEMICOLON stmt \n        | stmtstmt : assignment \n        | read \n        | write \n        | declarationassignment : ID ASSIGN a_exprdeclaration : datatype IDdatatype : DT_INT \n        | DT_FLOATa_expr : a_expr a_op a_expr\n              | varref\n              | INTEGER\n              | FLOAT\n              | LPAREN a_expr RPAREN\n              | SUB a_expra_op : MUL \n            | DIV\n            | ADD \n            | SUBvarref : IDread : READ varlistwrite : WRITE expr_listvarlist : varlist COMMA varref \n        | varrefexpr_list : expr_list COMMA a_expr \n        | a_expr'
    
_lr_action_items = {'ID':([0,9,10,11,12,13,14,15,24,25,29,30,31,32,33,34,35,],[8,18,18,26,-10,-11,8,18,18,18,18,18,18,-18,-19,-20,-21,]),'READ':([0,14,],[9,9,]),'WRITE':([0,14,],[10,10,]),'DT_INT':([0,14,],[12,12,]),'DT_FLOAT':([0,14,],[13,13,]),'$end':([1,14,],[0,-1,]),'SEMICOLON':([2,3,4,5,6,7,16,17,18,19,20,21,22,23,26,27,28,37,38,39,40,41,],[14,-3,-4,-5,-6,-7,-23,-26,-22,-24,-28,-13,-14,-15,-9,-2,-8,-17,-25,-27,-12,-16,]),'ASSIGN':([8,],[15,]),'INTEGER':([10,15,24,25,30,31,32,33,34,35,],[22,22,22,22,22,22,-18,-19,-20,-21,]),'FLOAT':([10,15,24,25,30,31,32,33,34,35,],[23,23,23,23,23,23,-18,-19,-20,-21,]),'LPAREN':([10,15,24,25,30,31,32,33,34,35,],[24,24,24,24,24,24,-18,-19,-20,-21,]),'SUB':([10,15,18,20,21,22,23,24,25,28,30,31,32,33,34,35,36,37,39,40,41,],[25,25,-22,35,-13,-14,-15,25,25,35,25,25,-18,-19,-20,-21,35,35,35,35,-16,]),'COMMA':([16,17,18,19,20,21,22,23,37,38,39,40,41,],[29,-26,-22,30,-28,-13,-14,-15,-17,-25,-27,-12,-16,]),'MUL':([18,20,21,22,23,28,36,37,39,40,41,],[-22,32,-13,-14,-15,32,32,32,32,32,-16,]),'DIV':([18,20,21,22,23,28,36,37,39,40,41,],[-22,33,-13,-14,-15,33,33,33,33,33,-16,]),'ADD':([18,20,21,22,23,28,36,37,39,40,41,],[-22,34,-13,-14,-15,34,34,34,34,34,-16,]),'RPAREN':([18,21,22,23,36,37,40,41,],[-22,-13,-14,-15,41,-17,-12,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,],[2,]),'stmt':([0,14,],[3,27,]),'assignment':([0,14,],[4,4,]),'read':([0,14,],[5,5,]),'write':([0,14,],[6,6,]),'declaration':([0,14,],[7,7,]),'datatype':([0,14,],[11,11,]),'varlist':([9,],[16,]),'varref':([9,10,15,24,25,29,30,31,],[17,21,21,21,21,38,21,21,]),'expr_list':([10,],[19,]),'a_expr':([10,15,24,25,30,31,],[20,28,36,37,39,40,]),'a_op':([20,28,36,37,39,40,],[31,31,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list SEMICOLON','program',2,'p_program','parser.py',88),
  ('stmt_list -> stmt_list SEMICOLON stmt','stmt_list',3,'p_stmt_list','parser.py',91),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',92),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',95),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',96),
  ('stmt -> write','stmt',1,'p_stmt','parser.py',97),
  ('stmt -> declaration','stmt',1,'p_stmt','parser.py',98),
  ('assignment -> ID ASSIGN a_expr','assignment',3,'p_assignment','parser.py',101),
  ('declaration -> datatype ID','declaration',2,'p_declaration','parser.py',105),
  ('datatype -> DT_INT','datatype',1,'p_datatype','parser.py',112),
  ('datatype -> DT_FLOAT','datatype',1,'p_datatype','parser.py',113),
  ('a_expr -> a_expr a_op a_expr','a_expr',3,'p_a_expr','parser.py',117),
  ('a_expr -> varref','a_expr',1,'p_a_expr','parser.py',118),
  ('a_expr -> INTEGER','a_expr',1,'p_a_expr','parser.py',119),
  ('a_expr -> FLOAT','a_expr',1,'p_a_expr','parser.py',120),
  ('a_expr -> LPAREN a_expr RPAREN','a_expr',3,'p_a_expr','parser.py',121),
  ('a_expr -> SUB a_expr','a_expr',2,'p_a_expr','parser.py',122),
  ('a_op -> MUL','a_op',1,'p_a_op','parser.py',140),
  ('a_op -> DIV','a_op',1,'p_a_op','parser.py',141),
  ('a_op -> ADD','a_op',1,'p_a_op','parser.py',142),
  ('a_op -> SUB','a_op',1,'p_a_op','parser.py',143),
  ('varref -> ID','varref',1,'p_varref','parser.py',147),
  ('read -> READ varlist','read',2,'p_read','parser.py',152),
  ('write -> WRITE expr_list','write',2,'p_write','parser.py',156),
  ('varlist -> varlist COMMA varref','varlist',3,'p_varlist','parser.py',160),
  ('varlist -> varref','varlist',1,'p_varlist','parser.py',161),
  ('expr_list -> expr_list COMMA a_expr','expr_list',3,'p_expr_list','parser.py',168),
  ('expr_list -> a_expr','expr_list',1,'p_expr_list','parser.py',169),
]
