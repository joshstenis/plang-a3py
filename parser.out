Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list SEMICOLON
Rule 2     stmt_list -> stmt_list SEMICOLON stmt
Rule 3     stmt_list -> stmt
Rule 4     stmt -> assignment
Rule 5     stmt -> read
Rule 6     stmt -> write
Rule 7     stmt -> declaration
Rule 8     assignment -> varref ASSIGN a_expr
Rule 9     declaration -> datatype ID
Rule 10    datatype -> DT_INT
Rule 11    datatype -> DT_FLOAT
Rule 12    a_expr -> a_expr a_op a_expr
Rule 13    a_expr -> LPAREN a_expr RPAREN
Rule 14    a_expr -> INTEGER
Rule 15    a_expr -> FLOAT
Rule 16    a_expr -> varref
Rule 17    a_expr -> SUB a_expr
Rule 18    a_op -> MUL
Rule 19    a_op -> DIV
Rule 20    a_op -> ADD
Rule 21    a_op -> SUB
Rule 22    varref -> ID
Rule 23    read -> READ varlist
Rule 24    write -> WRITE expr_list
Rule 25    varlist -> varlist COMMA varref
Rule 26    varlist -> varref
Rule 27    expr_list -> expr_list COMMA a_expr
Rule 28    expr_list -> a_expr

Terminals, with rules where they appear

ADD                  : 20
ASSIGN               : 8
COMMA                : 25 27
DIV                  : 19
DT_FLOAT             : 11
DT_INT               : 10
FLOAT                : 15
ID                   : 9 22
INTEGER              : 14
LPAREN               : 13
MUL                  : 18
READ                 : 23
RPAREN               : 13
SEMICOLON            : 1 2
SUB                  : 17 21
WRITE                : 24
error                : 

Nonterminals, with rules where they appear

a_expr               : 8 12 12 13 17 27 28
a_op                 : 12
assignment           : 4
datatype             : 9
declaration          : 7
expr_list            : 24 27
program              : 0
read                 : 5
stmt                 : 2 3
stmt_list            : 1 2
varlist              : 23 25
varref               : 8 16 25 26
write                : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list SEMICOLON
    (2) stmt_list -> . stmt_list SEMICOLON stmt
    (3) stmt_list -> . stmt
    (4) stmt -> . assignment
    (5) stmt -> . read
    (6) stmt -> . write
    (7) stmt -> . declaration
    (8) assignment -> . varref ASSIGN a_expr
    (23) read -> . READ varlist
    (24) write -> . WRITE expr_list
    (9) declaration -> . datatype ID
    (22) varref -> . ID
    (10) datatype -> . DT_INT
    (11) datatype -> . DT_FLOAT

    READ            shift and go to state 9
    WRITE           shift and go to state 10
    ID              shift and go to state 12
    DT_INT          shift and go to state 13
    DT_FLOAT        shift and go to state 14

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3
    assignment                     shift and go to state 4
    read                           shift and go to state 5
    write                          shift and go to state 6
    declaration                    shift and go to state 7
    varref                         shift and go to state 8
    datatype                       shift and go to state 11

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list . SEMICOLON
    (2) stmt_list -> stmt_list . SEMICOLON stmt

    SEMICOLON       shift and go to state 15


state 3

    (3) stmt_list -> stmt .

    SEMICOLON       reduce using rule 3 (stmt_list -> stmt .)


state 4

    (4) stmt -> assignment .

    SEMICOLON       reduce using rule 4 (stmt -> assignment .)


state 5

    (5) stmt -> read .

    SEMICOLON       reduce using rule 5 (stmt -> read .)


state 6

    (6) stmt -> write .

    SEMICOLON       reduce using rule 6 (stmt -> write .)


state 7

    (7) stmt -> declaration .

    SEMICOLON       reduce using rule 7 (stmt -> declaration .)


state 8

    (8) assignment -> varref . ASSIGN a_expr

    ASSIGN          shift and go to state 16


state 9

    (23) read -> READ . varlist
    (25) varlist -> . varlist COMMA varref
    (26) varlist -> . varref
    (22) varref -> . ID

    ID              shift and go to state 12

    varlist                        shift and go to state 17
    varref                         shift and go to state 18

state 10

    (24) write -> WRITE . expr_list
    (27) expr_list -> . expr_list COMMA a_expr
    (28) expr_list -> . a_expr
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    expr_list                      shift and go to state 19
    a_expr                         shift and go to state 20
    varref                         shift and go to state 24

state 11

    (9) declaration -> datatype . ID

    ID              shift and go to state 26


state 12

    (22) varref -> ID .

    ASSIGN          reduce using rule 22 (varref -> ID .)
    COMMA           reduce using rule 22 (varref -> ID .)
    SEMICOLON       reduce using rule 22 (varref -> ID .)
    MUL             reduce using rule 22 (varref -> ID .)
    DIV             reduce using rule 22 (varref -> ID .)
    ADD             reduce using rule 22 (varref -> ID .)
    SUB             reduce using rule 22 (varref -> ID .)
    RPAREN          reduce using rule 22 (varref -> ID .)


state 13

    (10) datatype -> DT_INT .

    ID              reduce using rule 10 (datatype -> DT_INT .)


state 14

    (11) datatype -> DT_FLOAT .

    ID              reduce using rule 11 (datatype -> DT_FLOAT .)


state 15

    (1) program -> stmt_list SEMICOLON .
    (2) stmt_list -> stmt_list SEMICOLON . stmt
    (4) stmt -> . assignment
    (5) stmt -> . read
    (6) stmt -> . write
    (7) stmt -> . declaration
    (8) assignment -> . varref ASSIGN a_expr
    (23) read -> . READ varlist
    (24) write -> . WRITE expr_list
    (9) declaration -> . datatype ID
    (22) varref -> . ID
    (10) datatype -> . DT_INT
    (11) datatype -> . DT_FLOAT

    $end            reduce using rule 1 (program -> stmt_list SEMICOLON .)
    READ            shift and go to state 9
    WRITE           shift and go to state 10
    ID              shift and go to state 12
    DT_INT          shift and go to state 13
    DT_FLOAT        shift and go to state 14

    stmt                           shift and go to state 27
    assignment                     shift and go to state 4
    read                           shift and go to state 5
    write                          shift and go to state 6
    declaration                    shift and go to state 7
    varref                         shift and go to state 8
    datatype                       shift and go to state 11

state 16

    (8) assignment -> varref ASSIGN . a_expr
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    varref                         shift and go to state 24
    a_expr                         shift and go to state 28

state 17

    (23) read -> READ varlist .
    (25) varlist -> varlist . COMMA varref

    SEMICOLON       reduce using rule 23 (read -> READ varlist .)
    COMMA           shift and go to state 29


state 18

    (26) varlist -> varref .

    COMMA           reduce using rule 26 (varlist -> varref .)
    SEMICOLON       reduce using rule 26 (varlist -> varref .)


state 19

    (24) write -> WRITE expr_list .
    (27) expr_list -> expr_list . COMMA a_expr

    SEMICOLON       reduce using rule 24 (write -> WRITE expr_list .)
    COMMA           shift and go to state 30


state 20

    (28) expr_list -> a_expr .
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

    COMMA           reduce using rule 28 (expr_list -> a_expr .)
    SEMICOLON       reduce using rule 28 (expr_list -> a_expr .)
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

    a_op                           shift and go to state 31

state 21

    (13) a_expr -> LPAREN . a_expr RPAREN
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    a_expr                         shift and go to state 36
    varref                         shift and go to state 24

state 22

    (14) a_expr -> INTEGER .

    MUL             reduce using rule 14 (a_expr -> INTEGER .)
    DIV             reduce using rule 14 (a_expr -> INTEGER .)
    ADD             reduce using rule 14 (a_expr -> INTEGER .)
    SUB             reduce using rule 14 (a_expr -> INTEGER .)
    COMMA           reduce using rule 14 (a_expr -> INTEGER .)
    SEMICOLON       reduce using rule 14 (a_expr -> INTEGER .)
    RPAREN          reduce using rule 14 (a_expr -> INTEGER .)


state 23

    (15) a_expr -> FLOAT .

    MUL             reduce using rule 15 (a_expr -> FLOAT .)
    DIV             reduce using rule 15 (a_expr -> FLOAT .)
    ADD             reduce using rule 15 (a_expr -> FLOAT .)
    SUB             reduce using rule 15 (a_expr -> FLOAT .)
    COMMA           reduce using rule 15 (a_expr -> FLOAT .)
    SEMICOLON       reduce using rule 15 (a_expr -> FLOAT .)
    RPAREN          reduce using rule 15 (a_expr -> FLOAT .)


state 24

    (16) a_expr -> varref .

    MUL             reduce using rule 16 (a_expr -> varref .)
    DIV             reduce using rule 16 (a_expr -> varref .)
    ADD             reduce using rule 16 (a_expr -> varref .)
    SUB             reduce using rule 16 (a_expr -> varref .)
    COMMA           reduce using rule 16 (a_expr -> varref .)
    SEMICOLON       reduce using rule 16 (a_expr -> varref .)
    RPAREN          reduce using rule 16 (a_expr -> varref .)


state 25

    (17) a_expr -> SUB . a_expr
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    a_expr                         shift and go to state 37
    varref                         shift and go to state 24

state 26

    (9) declaration -> datatype ID .

    SEMICOLON       reduce using rule 9 (declaration -> datatype ID .)


state 27

    (2) stmt_list -> stmt_list SEMICOLON stmt .

    SEMICOLON       reduce using rule 2 (stmt_list -> stmt_list SEMICOLON stmt .)


state 28

    (8) assignment -> varref ASSIGN a_expr .
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

    SEMICOLON       reduce using rule 8 (assignment -> varref ASSIGN a_expr .)
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

    a_op                           shift and go to state 31

state 29

    (25) varlist -> varlist COMMA . varref
    (22) varref -> . ID

    ID              shift and go to state 12

    varref                         shift and go to state 38

state 30

    (27) expr_list -> expr_list COMMA . a_expr
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    a_expr                         shift and go to state 39
    varref                         shift and go to state 24

state 31

    (12) a_expr -> a_expr a_op . a_expr
    (12) a_expr -> . a_expr a_op a_expr
    (13) a_expr -> . LPAREN a_expr RPAREN
    (14) a_expr -> . INTEGER
    (15) a_expr -> . FLOAT
    (16) a_expr -> . varref
    (17) a_expr -> . SUB a_expr
    (22) varref -> . ID

    LPAREN          shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    SUB             shift and go to state 25
    ID              shift and go to state 12

    a_expr                         shift and go to state 40
    varref                         shift and go to state 24

state 32

    (18) a_op -> MUL .

    LPAREN          reduce using rule 18 (a_op -> MUL .)
    INTEGER         reduce using rule 18 (a_op -> MUL .)
    FLOAT           reduce using rule 18 (a_op -> MUL .)
    SUB             reduce using rule 18 (a_op -> MUL .)
    ID              reduce using rule 18 (a_op -> MUL .)


state 33

    (19) a_op -> DIV .

    LPAREN          reduce using rule 19 (a_op -> DIV .)
    INTEGER         reduce using rule 19 (a_op -> DIV .)
    FLOAT           reduce using rule 19 (a_op -> DIV .)
    SUB             reduce using rule 19 (a_op -> DIV .)
    ID              reduce using rule 19 (a_op -> DIV .)


state 34

    (20) a_op -> ADD .

    LPAREN          reduce using rule 20 (a_op -> ADD .)
    INTEGER         reduce using rule 20 (a_op -> ADD .)
    FLOAT           reduce using rule 20 (a_op -> ADD .)
    SUB             reduce using rule 20 (a_op -> ADD .)
    ID              reduce using rule 20 (a_op -> ADD .)


state 35

    (21) a_op -> SUB .

    LPAREN          reduce using rule 21 (a_op -> SUB .)
    INTEGER         reduce using rule 21 (a_op -> SUB .)
    FLOAT           reduce using rule 21 (a_op -> SUB .)
    SUB             reduce using rule 21 (a_op -> SUB .)
    ID              reduce using rule 21 (a_op -> SUB .)


state 36

    (13) a_expr -> LPAREN a_expr . RPAREN
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

    RPAREN          shift and go to state 41
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

    a_op                           shift and go to state 31

state 37

    (17) a_expr -> SUB a_expr .
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 17 (a_expr -> SUB a_expr .)
    SEMICOLON       reduce using rule 17 (a_expr -> SUB a_expr .)
    RPAREN          reduce using rule 17 (a_expr -> SUB a_expr .)
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

  ! MUL             [ reduce using rule 17 (a_expr -> SUB a_expr .) ]
  ! DIV             [ reduce using rule 17 (a_expr -> SUB a_expr .) ]
  ! ADD             [ reduce using rule 17 (a_expr -> SUB a_expr .) ]
  ! SUB             [ reduce using rule 17 (a_expr -> SUB a_expr .) ]

    a_op                           shift and go to state 31

state 38

    (25) varlist -> varlist COMMA varref .

    COMMA           reduce using rule 25 (varlist -> varlist COMMA varref .)
    SEMICOLON       reduce using rule 25 (varlist -> varlist COMMA varref .)


state 39

    (27) expr_list -> expr_list COMMA a_expr .
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

    COMMA           reduce using rule 27 (expr_list -> expr_list COMMA a_expr .)
    SEMICOLON       reduce using rule 27 (expr_list -> expr_list COMMA a_expr .)
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

    a_op                           shift and go to state 31

state 40

    (12) a_expr -> a_expr a_op a_expr .
    (12) a_expr -> a_expr . a_op a_expr
    (18) a_op -> . MUL
    (19) a_op -> . DIV
    (20) a_op -> . ADD
    (21) a_op -> . SUB

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    COMMA           reduce using rule 12 (a_expr -> a_expr a_op a_expr .)
    SEMICOLON       reduce using rule 12 (a_expr -> a_expr a_op a_expr .)
    RPAREN          reduce using rule 12 (a_expr -> a_expr a_op a_expr .)
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    ADD             shift and go to state 34
    SUB             shift and go to state 35

  ! MUL             [ reduce using rule 12 (a_expr -> a_expr a_op a_expr .) ]
  ! DIV             [ reduce using rule 12 (a_expr -> a_expr a_op a_expr .) ]
  ! ADD             [ reduce using rule 12 (a_expr -> a_expr a_op a_expr .) ]
  ! SUB             [ reduce using rule 12 (a_expr -> a_expr a_op a_expr .) ]

    a_op                           shift and go to state 31

state 41

    (13) a_expr -> LPAREN a_expr RPAREN .

    MUL             reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    DIV             reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    ADD             reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    SUB             reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    COMMA           reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    SEMICOLON       reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)
    RPAREN          reduce using rule 13 (a_expr -> LPAREN a_expr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MUL in state 37 resolved as shift
WARNING: shift/reduce conflict for DIV in state 37 resolved as shift
WARNING: shift/reduce conflict for ADD in state 37 resolved as shift
WARNING: shift/reduce conflict for SUB in state 37 resolved as shift
WARNING: shift/reduce conflict for MUL in state 40 resolved as shift
WARNING: shift/reduce conflict for DIV in state 40 resolved as shift
WARNING: shift/reduce conflict for ADD in state 40 resolved as shift
WARNING: shift/reduce conflict for SUB in state 40 resolved as shift
