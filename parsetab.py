
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASSIGN COMMA DIV DT_FLOAT DT_INT FLOAT ID INTEGER LPAREN MUL READ RPAREN SEMICOLON SUB WRITEprogram : stmt_list SEMICOLONstmt_list : stmt_list SEMICOLON stmt \n        | stmtstmt : assignment \n        | read \n        | write \n        | declarationassignment : varref ASSIGN a_exprdeclaration : datatype IDdatatype : DT_INT \n        | DT_FLOATa_expr :  a_expr add a_term\n              | a_expr sub a_term\n              | a_termadd : ADDsub : SUBa_term : a_term mul a_fact\n              | a_term div a_fact\n              | a_factmul : MULdiv : DIVa_fact : LPAREN a_expr RPAREN\n              | INTEGER\n              | FLOAT\n              | varref\n              | SUB a_exprvarref : IDread : READ varlistwrite : WRITE expr_listvarlist : varlist COMMA varref \n        | varrefexpr_list : expr_list COMMA a_expr \n        | a_expr'
    
_lr_action_items = {'READ':([0,15,],[9,9,]),'WRITE':([0,15,],[10,10,]),'ID':([0,9,10,11,13,14,15,16,23,27,31,32,33,34,35,36,37,38,39,40,],[12,12,12,28,-10,-11,12,12,12,12,12,12,12,12,-15,-16,12,12,-20,-21,]),'DT_INT':([0,15,],[13,13,]),'DT_FLOAT':([0,15,],[14,14,]),'$end':([1,15,],[0,-1,]),'SEMICOLON':([2,3,4,5,6,7,12,17,18,19,20,21,22,24,25,26,28,29,30,42,43,44,45,46,47,48,49,],[15,-3,-4,-5,-6,-7,-27,-28,-31,-29,-33,-14,-19,-23,-24,-25,-9,-2,-8,-26,-30,-32,-12,-13,-17,-18,-22,]),'ASSIGN':([8,12,],[16,-27,]),'LPAREN':([10,16,23,27,32,33,34,35,36,37,38,39,40,],[23,23,23,23,23,23,23,-15,-16,23,23,-20,-21,]),'INTEGER':([10,16,23,27,32,33,34,35,36,37,38,39,40,],[24,24,24,24,24,24,24,-15,-16,24,24,-20,-21,]),'FLOAT':([10,16,23,27,32,33,34,35,36,37,38,39,40,],[25,25,25,25,25,25,25,-15,-16,25,25,-20,-21,]),'SUB':([10,12,16,20,21,22,23,24,25,26,27,30,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,],[27,-27,27,36,-14,-19,27,-23,-24,-25,27,36,27,27,27,-15,-16,27,27,-20,-21,36,36,36,-12,-13,-17,-18,-22,]),'COMMA':([12,17,18,19,20,21,22,24,25,26,42,43,44,45,46,47,48,49,],[-27,31,-31,32,-33,-14,-19,-23,-24,-25,-26,-30,-32,-12,-13,-17,-18,-22,]),'MUL':([12,21,22,24,25,26,42,45,46,47,48,49,],[-27,39,-19,-23,-24,-25,-26,39,39,-17,-18,-22,]),'DIV':([12,21,22,24,25,26,42,45,46,47,48,49,],[-27,40,-19,-23,-24,-25,-26,40,40,-17,-18,-22,]),'ADD':([12,20,21,22,24,25,26,30,41,42,44,45,46,47,48,49,],[-27,35,-14,-19,-23,-24,-25,35,35,35,35,-12,-13,-17,-18,-22,]),'RPAREN':([12,21,22,24,25,26,41,42,45,46,47,48,49,],[-27,-14,-19,-23,-24,-25,49,-26,-12,-13,-17,-18,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,],[2,]),'stmt':([0,15,],[3,29,]),'assignment':([0,15,],[4,4,]),'read':([0,15,],[5,5,]),'write':([0,15,],[6,6,]),'declaration':([0,15,],[7,7,]),'varref':([0,9,10,15,16,23,27,31,32,33,34,37,38,],[8,18,26,8,26,26,26,43,26,26,26,26,26,]),'datatype':([0,15,],[11,11,]),'varlist':([9,],[17,]),'expr_list':([10,],[19,]),'a_expr':([10,16,23,27,32,],[20,30,41,42,44,]),'a_term':([10,16,23,27,32,33,34,],[21,21,21,21,21,45,46,]),'a_fact':([10,16,23,27,32,33,34,37,38,],[22,22,22,22,22,22,22,47,48,]),'add':([20,30,41,42,44,],[33,33,33,33,33,]),'sub':([20,30,41,42,44,],[34,34,34,34,34,]),'mul':([21,45,46,],[37,37,37,]),'div':([21,45,46,],[38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list SEMICOLON','program',2,'p_program','parser.py',97),
  ('stmt_list -> stmt_list SEMICOLON stmt','stmt_list',3,'p_stmt_list','parser.py',100),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',101),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',105),
  ('stmt -> write','stmt',1,'p_stmt','parser.py',106),
  ('stmt -> declaration','stmt',1,'p_stmt','parser.py',107),
  ('assignment -> varref ASSIGN a_expr','assignment',3,'p_assignment','parser.py',110),
  ('declaration -> datatype ID','declaration',2,'p_declaration','parser.py',114),
  ('datatype -> DT_INT','datatype',1,'p_datatype','parser.py',121),
  ('datatype -> DT_FLOAT','datatype',1,'p_datatype','parser.py',122),
  ('a_expr -> a_expr add a_term','a_expr',3,'p_a_expr','parser.py',126),
  ('a_expr -> a_expr sub a_term','a_expr',3,'p_a_expr','parser.py',127),
  ('a_expr -> a_term','a_expr',1,'p_a_expr','parser.py',128),
  ('add -> ADD','add',1,'p_add','parser.py',134),
  ('sub -> SUB','sub',1,'p_sub','parser.py',138),
  ('a_term -> a_term mul a_fact','a_term',3,'p_a_term','parser.py',142),
  ('a_term -> a_term div a_fact','a_term',3,'p_a_term','parser.py',143),
  ('a_term -> a_fact','a_term',1,'p_a_term','parser.py',144),
  ('mul -> MUL','mul',1,'p_mul','parser.py',150),
  ('div -> DIV','div',1,'p_div','parser.py',154),
  ('a_fact -> LPAREN a_expr RPAREN','a_fact',3,'p_a_fact','parser.py',158),
  ('a_fact -> INTEGER','a_fact',1,'p_a_fact','parser.py',159),
  ('a_fact -> FLOAT','a_fact',1,'p_a_fact','parser.py',160),
  ('a_fact -> varref','a_fact',1,'p_a_fact','parser.py',161),
  ('a_fact -> SUB a_expr','a_fact',2,'p_a_fact','parser.py',162),
  ('varref -> ID','varref',1,'p_varref','parser.py',168),
  ('read -> READ varlist','read',2,'p_read','parser.py',172),
  ('write -> WRITE expr_list','write',2,'p_write','parser.py',176),
  ('varlist -> varlist COMMA varref','varlist',3,'p_varlist','parser.py',180),
  ('varlist -> varref','varlist',1,'p_varlist','parser.py',181),
  ('expr_list -> expr_list COMMA a_expr','expr_list',3,'p_expr_list','parser.py',188),
  ('expr_list -> a_expr','expr_list',1,'p_expr_list','parser.py',189),
]
