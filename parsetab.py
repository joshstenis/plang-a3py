
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASSIGN COLON COMMA COMMENT DIV DT_FLOAT DT_INT FLOAT ID INTEGER LBRACK LITERAL_STR LPAREN MUL RBRACK READ RPAREN SEMICOLON SUB WRITEprogram : stmt_list SEMICOLONstmt_list : stmt_list SEMICOLON stmt \n        | stmtstmt : assignment \n        | read \n        | write \n        | declarationassignment : varref ASSIGN a_exprdeclaration : datatype IDdatatype : DT_INT \n        | DT_FLOATa_expr : a_expr ADD a_term \n        | a_expr SUB a_term \n        | a_terma_term : a_term MUL a_fact \n        | a_term DIV a_fact \n        | a_facta_fact : varref \n        | INTEGER \n        | FLOAT \n        | LPAREN a_expr RPAREN \n        | SUB a_fact\n        | LITERAL_STRvarref : IDread : READ varlistwrite : WRITE expr_listvarlist : varlist COMMA varref \n        | varrefexpr_list : expr_list COMMA a_expr \n        | a_expr'
    
_lr_action_items = {'READ':([0,15,],[9,9,]),'WRITE':([0,15,],[10,10,]),'ID':([0,9,10,11,13,14,15,16,22,27,32,33,34,35,36,37,],[12,12,12,29,-10,-11,12,12,12,12,12,12,12,12,12,12,]),'DT_INT':([0,15,],[13,13,]),'DT_FLOAT':([0,15,],[14,14,]),'$end':([1,15,],[0,-1,]),'SEMICOLON':([2,3,4,5,6,7,12,17,18,19,20,21,23,24,25,26,28,29,30,31,38,40,41,42,43,44,45,46,],[15,-3,-4,-5,-6,-7,-24,-25,-28,-26,-30,-14,-17,-18,-19,-20,-23,-9,-2,-8,-22,-27,-29,-12,-13,-15,-16,-21,]),'ASSIGN':([8,12,],[16,-24,]),'INTEGER':([10,16,22,27,33,34,35,36,37,],[25,25,25,25,25,25,25,25,25,]),'FLOAT':([10,16,22,27,33,34,35,36,37,],[26,26,26,26,26,26,26,26,26,]),'LPAREN':([10,16,22,27,33,34,35,36,37,],[27,27,27,27,27,27,27,27,27,]),'SUB':([10,12,16,20,21,22,23,24,25,26,27,28,31,33,34,35,36,37,38,39,41,42,43,44,45,46,],[22,-24,22,35,-14,22,-17,-18,-19,-20,22,-23,35,22,22,22,22,22,-22,35,35,-12,-13,-15,-16,-21,]),'LITERAL_STR':([10,16,22,27,33,34,35,36,37,],[28,28,28,28,28,28,28,28,28,]),'COMMA':([12,17,18,19,20,21,23,24,25,26,28,38,40,41,42,43,44,45,46,],[-24,32,-28,33,-30,-14,-17,-18,-19,-20,-23,-22,-27,-29,-12,-13,-15,-16,-21,]),'MUL':([12,21,23,24,25,26,28,38,42,43,44,45,46,],[-24,36,-17,-18,-19,-20,-23,-22,36,36,-15,-16,-21,]),'DIV':([12,21,23,24,25,26,28,38,42,43,44,45,46,],[-24,37,-17,-18,-19,-20,-23,-22,37,37,-15,-16,-21,]),'ADD':([12,20,21,23,24,25,26,28,31,38,39,41,42,43,44,45,46,],[-24,34,-14,-17,-18,-19,-20,-23,34,-22,34,34,-12,-13,-15,-16,-21,]),'RPAREN':([12,21,23,24,25,26,28,38,39,42,43,44,45,46,],[-24,-14,-17,-18,-19,-20,-23,-22,46,-12,-13,-15,-16,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,],[2,]),'stmt':([0,15,],[3,30,]),'assignment':([0,15,],[4,4,]),'read':([0,15,],[5,5,]),'write':([0,15,],[6,6,]),'declaration':([0,15,],[7,7,]),'varref':([0,9,10,15,16,22,27,32,33,34,35,36,37,],[8,18,24,8,24,24,24,40,24,24,24,24,24,]),'datatype':([0,15,],[11,11,]),'varlist':([9,],[17,]),'expr_list':([10,],[19,]),'a_expr':([10,16,27,33,],[20,31,39,41,]),'a_term':([10,16,27,33,34,35,],[21,21,21,21,42,43,]),'a_fact':([10,16,22,27,33,34,35,36,37,],[23,23,38,23,23,23,23,44,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list SEMICOLON','program',2,'p_program','parser.py',58),
  ('stmt_list -> stmt_list SEMICOLON stmt','stmt_list',3,'p_stmt_list','parser.py',61),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',62),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',65),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',66),
  ('stmt -> write','stmt',1,'p_stmt','parser.py',67),
  ('stmt -> declaration','stmt',1,'p_stmt','parser.py',68),
  ('assignment -> varref ASSIGN a_expr','assignment',3,'p_assignment','parser.py',71),
  ('declaration -> datatype ID','declaration',2,'p_declaration','parser.py',75),
  ('datatype -> DT_INT','datatype',1,'p_datatype','parser.py',79),
  ('datatype -> DT_FLOAT','datatype',1,'p_datatype','parser.py',80),
  ('a_expr -> a_expr ADD a_term','a_expr',3,'p_a_expr','parser.py',84),
  ('a_expr -> a_expr SUB a_term','a_expr',3,'p_a_expr','parser.py',85),
  ('a_expr -> a_term','a_expr',1,'p_a_expr','parser.py',86),
  ('a_term -> a_term MUL a_fact','a_term',3,'p_a_term','parser.py',90),
  ('a_term -> a_term DIV a_fact','a_term',3,'p_a_term','parser.py',91),
  ('a_term -> a_fact','a_term',1,'p_a_term','parser.py',92),
  ('a_fact -> varref','a_fact',1,'p_a_fact','parser.py',96),
  ('a_fact -> INTEGER','a_fact',1,'p_a_fact','parser.py',97),
  ('a_fact -> FLOAT','a_fact',1,'p_a_fact','parser.py',98),
  ('a_fact -> LPAREN a_expr RPAREN','a_fact',3,'p_a_fact','parser.py',99),
  ('a_fact -> SUB a_fact','a_fact',2,'p_a_fact','parser.py',100),
  ('a_fact -> LITERAL_STR','a_fact',1,'p_a_fact','parser.py',101),
  ('varref -> ID','varref',1,'p_varref','parser.py',105),
  ('read -> READ varlist','read',2,'p_read','parser.py',109),
  ('write -> WRITE expr_list','write',2,'p_write','parser.py',113),
  ('varlist -> varlist COMMA varref','varlist',3,'p_varlist','parser.py',117),
  ('varlist -> varref','varlist',1,'p_varlist','parser.py',118),
  ('expr_list -> expr_list COMMA a_expr','expr_list',3,'p_expr_list','parser.py',122),
  ('expr_list -> a_expr','expr_list',1,'p_expr_list','parser.py',123),
]
